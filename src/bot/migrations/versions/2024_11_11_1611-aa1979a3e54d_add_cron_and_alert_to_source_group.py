"""add cron and alert to source_group

Revision ID: aa1979a3e54d
Revises: 94be44f54cf9
Create Date: 2024-11-11 16:11:42.682147

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from migrations.data.monitoring_data.data import data
# revision identifiers, used by Alembic.
revision: str = 'aa1979a3e54d'
down_revision: Union[str, None] = '94be44f54cf9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('source_group', sa.Column('period_cron', sa.Text(), nullable=True, comment='Cron выражение периодичности парсинга данных'))
    op.add_column('source_group', sa.Column('alert_timedelta', sa.Integer(), nullable=True, comment='Количество секунд, после которых должен отправляться алерт, если парсер не обновился'))
    # ### end Alembic commands ###
    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)
    query = sa.text(
        'update source_group set period_cron=:period_cron, alert_timedelta=:alert_time '
        'where name=:source_name'
    )
    parser: dict
    for parser in data:
        session.execute(
            query.bindparams(
                period_cron=parser['period_cron'],
                alert_time=parser['alert_timedelta'],
                source_name=parser['name']
            )
        )
    session.commit()


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('source_group', 'alert_timedelta')
    op.drop_column('source_group', 'period_cron')
    # ### end Alembic commands ###
