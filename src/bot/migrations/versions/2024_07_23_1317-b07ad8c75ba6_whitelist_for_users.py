"""whitelist_for_users

Revision ID: b07ad8c75ba6
Revises: 48a5cebeea11
Create Date: 2024-07-23 13:17:18.598063

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

from migrations.data.whitelist_for_users import whitelist

# revision identifiers, used by Alembic.
revision: str = 'b07ad8c75ba6'
down_revision: Union[str, None] = '48a5cebeea11'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade_add_emails_to_whitelist(table: sa.Table) -> None:
    """Добавить почты пользователей в белый список в БД."""
    op.bulk_insert(table, whitelist.data)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('bot_call_reports_user_id_fkey', 'bot_call_reports', type_='foreignkey')
    op.drop_constraint('chat_id', 'message', type_='foreignkey')
    op.drop_constraint('user_client_subscription_user_id_fkey', 'user_client_subscription', type_='foreignkey')
    op.drop_constraint('user_commodity_subscription_user_id_fkey', 'user_commodity_subscription', type_='foreignkey')
    op.drop_constraint('user_industry_subscription_user_id_fkey', 'user_industry_subscription', type_='foreignkey')
    op.drop_constraint('user_meeting_user_id_fkey', 'user_meeting', type_='foreignkey')
    op.drop_constraint('user_research_subscription_user_id_fkey', 'user_research_subscription', type_='foreignkey')
    op.drop_constraint('user_id', 'user_telegram_subscription', type_='foreignkey')

    op.rename_table('whitelist', 'user')

    op.create_foreign_key('bot_call_reports_user_id_fkey', 'bot_call_reports', 'user', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('chat_id', 'message', 'user', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'user_client_subscription', 'user', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'user_commodity_subscription', 'user', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('user_industry_subscription_user_id_fkey', 'user_industry_subscription', 'user', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('user_meeting_user_id_fkey', 'user_meeting', 'user', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('user_research_subscription_user_id_fkey', 'user_research_subscription', 'user', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('user_id', 'user_telegram_subscription', 'user', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')

    whitelist_table = op.create_table('whitelist',
    sa.Column('user_email', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('user_email'),
    comment='Белый список email`ов, которые могут зарегистрироваться в боте',
    )
    # ### end Alembic commands ###
    upgrade_add_emails_to_whitelist(whitelist_table)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('whitelist')

    op.drop_constraint('user_id', 'user_telegram_subscription', type_='foreignkey')
    op.drop_constraint('user_research_subscription_user_id_fkey', 'user_research_subscription', type_='foreignkey')
    op.drop_constraint('user_meeting_user_id_fkey', 'user_meeting', type_='foreignkey')
    op.drop_constraint('user_industry_subscription_user_id_fkey', 'user_industry_subscription', type_='foreignkey')
    op.drop_constraint('user_commodity_subscription_user_id_fkey', 'user_commodity_subscription', type_='foreignkey')
    op.drop_constraint('user_client_subscription_user_id_fkey', 'user_client_subscription', type_='foreignkey')
    op.drop_constraint('chat_id', 'message', type_='foreignkey')
    op.drop_constraint('bot_call_reports_user_id_fkey', 'bot_call_reports', type_='foreignkey')

    op.rename_table('user', 'whitelist')

    op.create_foreign_key('user_id', 'user_telegram_subscription', 'whitelist', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('user_research_subscription_user_id_fkey', 'user_research_subscription', 'whitelist',
                          ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('user_meeting_user_id_fkey', 'user_meeting', 'whitelist', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('user_industry_subscription_user_id_fkey', 'user_industry_subscription', 'whitelist',
                          ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('user_commodity_subscription_user_id_fkey', 'user_commodity_subscription', 'whitelist',
                          ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('user_client_subscription_user_id_fkey', 'user_client_subscription', 'whitelist',
                          ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('chat_id', 'message', 'whitelist', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('bot_call_reports_user_id_fkey', 'bot_call_reports', 'whitelist', ['user_id'], ['user_id'],
                          onupdate='CASCADE', ondelete='CASCADE')
    # ### end Alembic commands ###
