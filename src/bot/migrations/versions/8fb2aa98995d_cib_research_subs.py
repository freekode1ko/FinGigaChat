"""cib research subs

Revision ID: 8fb2aa98995d
Revises: 2e8cea167b16
Create Date: 2024-03-26 16:40:24.242984

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import delete
from sqlalchemy.orm import Session

from db import models
from migrations.data.cib_research_subs import (
    parser_sources,
    research_groups,
    research_sections,
    research_types,
    source_groups,
)

# revision identifiers, used by Alembic.
revision: str = '8fb2aa98995d'
down_revision: Union[str, None] = '2e8cea167b16'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def add_new_source_groups(session: Session) -> None:
    new_groups = []

    for data in source_groups.source_groups:
        new_groups.append(models.SourceGroup(**data))

    session.add_all(new_groups)


def delete_new_source_groups(session: Session) -> None:
    delete_ids = [i['id'] for i in source_groups.source_groups]
    stmt = delete(models.SourceGroup).where(models.SourceGroup.id.in_(delete_ids))
    session.execute(stmt)


def add_new_sources(session: Session) -> None:
    new_data = []

    for data in parser_sources.parser_sources:
        new_data.append(models.ParserSource(**data))

    session.add_all(new_data)


def delete_new_sources(session: Session) -> None:
    delete_ids = [i['id'] for i in parser_sources.parser_sources]
    stmt = delete(models.ParserSource).where(models.ParserSource.id.in_(delete_ids))
    session.execute(stmt)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    research_group_table = op.create_table('research_group',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник групп, выделенных среди разделов CIB Research'
    )

    research_section_table = op.create_table('research_section',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('dropdown_flag', sa.Boolean(), server_default='true', nullable=True),
    sa.Column('research_group_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['research_group_id'], ['research_group.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник разделов CIB Research'
    )

    research_type_table = op.create_table('research_type',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), server_default='', nullable=True),
    sa.Column('research_section_id', sa.BigInteger(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['research_section_id'], ['research_section.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['parser_source.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник типов отчетов CIB Research, на которые пользователь может подписаться'
    )

    op.create_table('research',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('research_type_id', sa.BigInteger(), nullable=False),
    sa.Column('filepath', sa.Text(), server_default='', nullable=True),
    sa.Column('header', sa.Text(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('parse_datetime', sa.DateTime(), nullable=False),
    sa.Column('publication_date', sa.Date(), nullable=False),
    sa.Column('news_id', sa.String(length=64), nullable=False),
    sa.Column(
        'is_new',
        sa.Boolean(),
        nullable=False,
        server_default='true',
        comment='Указывает, что новость еще не рассылалась пользователям',
    ),
    sa.ForeignKeyConstraint(['research_type_id'], ['research_type.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник спаршенных отчетов CIB Research'
    )

    op.create_table('user_research_subscription',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('research_type_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['research_type_id'], ['research_type.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['whitelist.user_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'research_type_id'),
    comment='Справочник подписок пользователей на отчеты CIB Research'
    )

    op.add_column('parser_source', sa.Column('params', sa.JSON(), nullable=True))
    op.add_column('parser_source', sa.Column('before_link', sa.Text(), nullable=True, server_default=''))
    # ### end Alembic commands ###
    bind = op.get_bind()
    session = Session(bind=bind)

    add_new_source_groups(session)
    add_new_sources(session)
    session.commit()
    op.bulk_insert(research_group_table, research_groups.research_groups)
    op.bulk_insert(research_section_table, research_sections.research_sections)
    op.bulk_insert(research_type_table, research_types.research_types)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('parser_source', 'params')
    op.drop_table('user_research_subscription')
    op.drop_table('research')
    op.drop_table('research_type')
    op.drop_table('research_section')
    op.drop_table('research_group')
    # ### end Alembic commands ###
    bind = op.get_bind()
    session = Session(bind=bind)

    delete_new_sources(session)
    delete_new_source_groups(session)

