"""add col to parser_source

Revision ID: 94be44f54cf9
Revises: 784715f9100c
Create Date: 2024-10-30 13:39:50.665288

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from db.models import SourceGroup, ParserSource
from migrations.data.monitoring_data.new_source_group import (
    article_source_group,
    CIB_RESEARCH_SOURCE_GROUP_NAME_LATIN,
    new_source_group,
    rename_parser_source_dict
)

# revision identifiers, used by Alembic.
revision: str = '94be44f54cf9'
down_revision: Union[str, None] = '9982181d8fe8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def add_to_source_group(session: sa.orm.Session, name: str, name_latin: str, last_id: int) -> int:
    id_ = last_id + 1
    session.execute(sa.insert(SourceGroup).values(id=id_, name=name, name_latin=name_latin))
    session.commit()
    return id_


def add_to_parser_source(session: sa.orm.Session, name: str, source_group_id: int, last_id: int) -> int:
    id_ = last_id + 1
    session.execute(sa.insert(ParserSource).values(
        id=id_,
        name=name,
        alt_names={},
        source='http://gigaparsers.ru:7000/get_articles/all',
        source_group_id=source_group_id,
    ))
    session.commit()
    return id_


def update_research_parser_source(session: sa.orm.Session, name: str, old_source_group_id: int, new_source_group_id: int):
    session.execute(
        sa.update(ParserSource)
        .values(source_group_id=new_source_group_id)
        .where(ParserSource.source_group_id == old_source_group_id)
        .where(ParserSource.name == name)
    )


def del_from_source_group(session: sa.orm.Session, name: str) -> None:
    query = sa.delete(SourceGroup).where(SourceGroup.name == name)
    session.execute(query)
    session.commit()


def return_old_source_group_id(session: sa.orm.Session, old_id: int, name: str):
    session.execute(
        sa.update(ParserSource)
        .values(source_group_id=old_id)
        .where(ParserSource.name == name)
    )


def rename_parser_source(session: sa.orm.Session, old_name: str, new_name: str):
    session.execute(
        sa.update(ParserSource)
        .values(name=new_name)
        .where(ParserSource.name == old_name)
    )


def upgrade() -> None:
    conn = op.get_bind()
    session = sa.orm.Session(bind=conn)
    # переименовнание некоторых отчетов в parser_source
    for old_name, new_name in rename_parser_source_dict.items():
        rename_parser_source(session, old_name, new_name)
    # получение необходимых id
    old_research_sg_id = session.execute(sa.select(SourceGroup.id).where(SourceGroup.name_latin == CIB_RESEARCH_SOURCE_GROUP_NAME_LATIN)).scalar()
    last_sg_id = session.execute(sa.select(SourceGroup.id).order_by(SourceGroup.id.desc())).scalar()
    last_ps_id = session.execute(sa.select(ParserSource.id).order_by(ParserSource.id.desc())).scalar()
    # добавление новых source_group и обновление/добавление в parser_group
    for new_sg in new_source_group:
        last_sg_id = add_to_source_group(session, new_sg['name'], new_sg['name_latin'], last_sg_id)
        if new_sg in article_source_group:
            last_ps_id = add_to_parser_source(session, new_sg['name'], last_sg_id, last_ps_id)
        else:
            update_research_parser_source(session, new_sg['name'], old_research_sg_id, last_sg_id)
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('parser_source', sa.Column('last_save_datetime', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    conn = op.get_bind()
    session = sa.orm.Session(bind=conn)
    # удаление новых source_group и возвращение к старым значениям в parser_group
    old_research_sg_id = session.execute(
        sa.select(SourceGroup.id).where(SourceGroup.name_latin == CIB_RESEARCH_SOURCE_GROUP_NAME_LATIN)
    ).scalar()
    for new_sg in new_source_group:
        if new_sg not in article_source_group:
            return_old_source_group_id(session, old_research_sg_id, new_sg['name'])
        del_from_source_group(session, new_sg['name'])
    # обратное переименование
    for old_name, new_name in rename_parser_source_dict.items():
        rename_parser_source(session, new_name, old_name)
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('parser_source', 'last_save_datetime')
    # ### end Alembic commands ###
