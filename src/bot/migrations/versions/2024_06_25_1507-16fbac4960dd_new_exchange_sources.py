"""new_exchange_sources

Revision ID: 16fbac4960dd
Revises: 8573660fb1c0
Create Date: 2024-06-25 15:07:09.299574

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.orm import Session

from db import models
from migrations.data.new_exchange_sources import exc, exc_types, parser_source
from migrations.models.new_exchange_sources import new_models


# revision identifiers, used by Alembic.
revision: str = '16fbac4960dd'
down_revision: Union[str, None] = '0a80d96a6984'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade_update_exc_parser_sources(session: Session) -> None:
    """Обновить parser_source"""
    session.execute(sa.delete(models.ParserSource).where(models.ParserSource.source_group_id == parser_source.source_group_id_subquery))
    session.execute(sa.insert(models.ParserSource).values(parser_source.new_data))


def upgrade_add_exc_types(session: Session) -> None:
    """Добавить типы курсов валют"""
    session.execute(sa.insert(new_models.ExcType).values(exc_types.data))


def upgrade_add_exc(session: Session) -> None:
    """Добавить курсы вaлют"""
    session.execute(sa.insert(new_models.Exc).values(exc.data))


def upgrade() -> None:
    bind = op.get_bind()
    session = Session(bind=bind)

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('exc')

    exc_type_table = op.create_table('bot_exc_type',
    sa.Column('id', sa.Integer, primary_key=True, autoincrement=True, comment='id типа'),
    sa.Column('name', sa.String(64), nullable=False, comment='Наименование типа курсов валют'),
    sa.Column('description', sa.Text(), nullable=True, server_default=sa.text("''::text"), comment='Описание'),
    sa.Column('display_order', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='Порядок отображения'),
    )

    op.create_table('exc',
    sa.Column('id', sa.Integer, primary_key=True, autoincrement=True, comment='id курса валюты'),
    sa.Column('name', sa.String(255), nullable=False, comment='Имя курса валюты'),
    sa.Column('name_latin', sa.String(255), nullable=True, comment='Имя eng', server_default=sa.text("''")),
    sa.Column('value', sa.String(255), nullable=False, comment='Значение курса', server_default=sa.text("'-'")),
    sa.Column('description', sa.Text(), nullable=True, server_default=sa.text("''::text"), comment='Описание'),
    sa.Column('display_order', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='Порядок отображения'),
    sa.Column('exc_type_id', sa.Integer(), nullable=False, comment='ID типа курса'),
    sa.Column('parser_source_id', sa.Integer(), primary_key=False, nullable=False, comment='id источника данных'),
    sa.ForeignKeyConstraint(['exc_type_id'], ['bot_exc_type.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parser_source_id'], ['parser_source.id'], onupdate='CASCADE', ondelete='CASCADE'),
    )
    # ### end Alembic commands ###
    upgrade_update_exc_parser_sources(session)
    upgrade_add_exc_types(session)
    upgrade_add_exc(session)


def downgrade_update_parser_source(session: Session) -> None:
    """Вернуть прежние источники"""
    session.execute(sa.delete(models.ParserSource).where(models.ParserSource.source_group_id == parser_source.source_group_id_subquery))
    session.execute(sa.insert(models.ParserSource), parser_source.old_data)


def downgrade() -> None:
    bind = op.get_bind()
    session = Session(bind=bind)
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exc',
    sa.Column('Валюта', sa.Text(), nullable=True),
    sa.Column('Курс', sa.Text(), nullable=True)
    )
    # ### end Alembic commands ###
    downgrade_update_parser_source(session)
