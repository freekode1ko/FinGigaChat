"""init

Revision ID: 865943b6e583
Revises: 
Create Date: 2024-03-07 16:41:06.432846

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '865943b6e583'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('article',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('link', sa.Text(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('text_sum', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bonds',
    sa.Column('Название', sa.Text(), nullable=True),
    sa.Column('Доходность', sa.Float(precision=53), nullable=True),
    sa.Column('Осн,', sa.Float(precision=53), nullable=True),
    sa.Column('Макс,', sa.Float(precision=53), nullable=True),
    sa.Column('Мин,', sa.Float(precision=53), nullable=True),
    sa.Column('Изм,', sa.Text(), nullable=True),
    sa.Column('Изм, %', sa.Text(), nullable=True),
    sa.Column('Время', sa.Text(), nullable=True),
    sa.Column('Unnamed: 0', sa.Float(precision=53), nullable=True),
    sa.Column('Unnamed: 9', sa.Float(precision=53), nullable=True),
    sa.Column('0', sa.Float(precision=53), nullable=True),
    sa.Column('1', sa.Text(), nullable=True),
    sa.Column('2', sa.Text(), nullable=True),
    sa.Column('3', sa.Float(precision=53), nullable=True),
    sa.Column('4', sa.Text(), nullable=True),
    sa.Column('5', sa.Float(precision=53), nullable=True),
    sa.Column('6', sa.Float(precision=53), nullable=True)
    )
    op.create_table('chat',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('type', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('date_of_last_build',
    sa.Column('date_time', sa.Text(), nullable=True)
    )
    op.create_table('eco_global_stake',
    sa.Column('Country', sa.Text(), nullable=True),
    sa.Column('Last', sa.Float(precision=53), nullable=True),
    sa.Column('Previous', sa.Float(precision=53), nullable=True),
    sa.Column('Reference', sa.Text(), nullable=True),
    sa.Column('Unit', sa.Text(), nullable=True)
    )
    op.create_table('eco_rus_influence',
    sa.Column('Дата', sa.Float(precision=53), nullable=True),
    sa.Column('Ключевая ставка, % годовых', sa.Float(precision=53), nullable=True),
    sa.Column('Инфляция, % г/г', sa.Float(precision=53), nullable=True),
    sa.Column('Цель по инфляции, %', sa.Float(precision=53), nullable=True)
    )
    op.create_table('eco_stake',
    sa.Column('0', sa.Text(), nullable=True),
    sa.Column('1', sa.Text(), nullable=True)
    )
    op.create_table('exc',
    sa.Column('Валюта', sa.Text(), nullable=True),
    sa.Column('Курс', sa.Text(), nullable=True)
    )
    op.create_table('financial_indicators',
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('2021', sa.Text(), nullable=True),
    sa.Column('2022', sa.Text(), nullable=True),
    sa.Column('2023E', sa.Text(), nullable=True),
    sa.Column('2024E', sa.Text(), nullable=True),
    sa.Column('2025E', sa.Text(), nullable=True),
    sa.Column('alias', sa.Text(), nullable=True),
    sa.Column('company', sa.Text(), nullable=True),
    sa.Column('2020', sa.Float(precision=53), nullable=True),
    sa.Column('2022E', sa.Float(precision=53), nullable=True),
    sa.Column('2019', sa.Float(precision=53), nullable=True),
    sa.Column('2021E', sa.Float(precision=53), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=True)
    )
    op.create_table('industry',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('key_eco',
    sa.Column('id', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('2021', sa.Text(), nullable=True),
    sa.Column('2022', sa.Text(), nullable=True),
    sa.Column('2023E', sa.Text(), nullable=True),
    sa.Column('2024E', sa.Text(), nullable=True),
    sa.Column('alias', sa.Text(), nullable=True)
    )
    op.create_table('message_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник типов отправленных сообщений (пассивная рассылка, ответ на запрос такой-то)'
    )
    op.create_table('metals',
    sa.Column('Metals', sa.Text(), nullable=True),
    sa.Column('Price', sa.Text(), nullable=True),
    sa.Column('Day', sa.Text(), nullable=True),
    sa.Column('%', sa.Text(), nullable=True),
    sa.Column('Weekly', sa.Text(), nullable=True),
    sa.Column('Monthly', sa.Text(), nullable=True),
    sa.Column('YoY', sa.Text(), nullable=True),
    sa.Column('Date', sa.Text(), nullable=True)
    )
    op.create_table('quote_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник выделенных среди котировок подгрупп'
    )
    op.create_table('report_bon_day',
    sa.Column('0', sa.Text(), nullable=True),
    sa.Column('1', sa.Text(), nullable=True),
    sa.Column('2', sa.Text(), nullable=True)
    )
    op.create_table('report_bon_mon',
    sa.Column('0', sa.Text(), nullable=True),
    sa.Column('1', sa.Text(), nullable=True),
    sa.Column('2', sa.Text(), nullable=True)
    )
    op.create_table('report_eco_day',
    sa.Column('0', sa.Text(), nullable=True),
    sa.Column('1', sa.Text(), nullable=True),
    sa.Column('2', sa.Text(), nullable=True)
    )
    op.create_table('report_eco_mon',
    sa.Column('0', sa.Text(), nullable=True),
    sa.Column('1', sa.Text(), nullable=True),
    sa.Column('2', sa.Text(), nullable=True)
    )
    op.create_table('report_exc_day',
    sa.Column('0', sa.Text(), nullable=True),
    sa.Column('1', sa.Text(), nullable=True),
    sa.Column('2', sa.Text(), nullable=True)
    )
    op.create_table('report_exc_mon',
    sa.Column('0', sa.Text(), nullable=True),
    sa.Column('1', sa.Text(), nullable=True),
    sa.Column('2', sa.Text(), nullable=True)
    )
    op.create_table('report_industry',
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('date', sa.Text(), nullable=True),
    sa.Column('send_flag', sa.Boolean(), nullable=True)
    )
    op.create_table('report_met_day',
    sa.Column('0', sa.Text(), nullable=True),
    sa.Column('1', sa.Text(), nullable=True),
    sa.Column('2', sa.Text(), nullable=True)
    )
    op.create_table('research_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('source', sa.Text(), nullable=False),
    sa.Column('response_format', sa.Text(), nullable=True),
    sa.Column('last_update_datetime', sa.DateTime(), nullable=True),
    sa.Column('previous_update_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_log',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), nullable=False),
    sa.Column('level', sa.Text(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('file_name', sa.Text(), nullable=True),
    sa.Column('func_name', sa.Text(), nullable=True),
    sa.Column('line_no', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=True)
    )
    op.create_table('whitelist',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.Text(), nullable=True),
    sa.Column('full_name', sa.Text(), nullable=True),
    sa.Column('user_type', sa.Text(), nullable=True),
    sa.Column('user_status', sa.Text(), nullable=True),
    sa.Column('user_email', sa.Text(), nullable=True),
    sa.Column('subscriptions', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('article_name_impact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('commodity_impact', sa.JSON(), nullable=True),
    sa.Column('client_impact', sa.JSON(), nullable=True),
    sa.Column('cleaned_data', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['article.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commodity',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('industry_alternative',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.Column('other_names', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('message_id', sa.BigInteger(), nullable=False),
    sa.Column('message_type_id', sa.Integer(), nullable=False),
    sa.Column('function_name', sa.Text(), nullable=False),
    sa.Column('send_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['message_type_id'], ['message_type.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['whitelist.user_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Хранилище отправленных пользователям сообщений'
    )
    op.create_table('quote_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('alias', sa.String(length=64), nullable=False),
    sa.Column('block', sa.String(length=255), nullable=False),
    sa.Column('source', sa.Text(), nullable=False),
    sa.Column('quote_group_id', sa.Integer(), nullable=False),
    sa.Column('response_format', sa.Text(), nullable=True),
    sa.Column('last_update_datetime', sa.DateTime(), nullable=True),
    sa.Column('previous_update_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['quote_group_id'], ['quote_group.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник источников котировок'
    )
    op.create_table('telegram_channel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('link', sa.String(length=255), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник telegram каналов, из которых вынимаются новости'
    )
    op.create_table('client_alternative',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('other_names', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commodity_alternative',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('commodity_id', sa.Integer(), nullable=False),
    sa.Column('other_names', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['commodity_id'], ['commodity.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commodity_pricing',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('commodity_id', sa.Integer(), nullable=False),
    sa.Column('subname', sa.Text(), nullable=False),
    sa.Column('unit', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(precision=53), nullable=True),
    sa.Column('m_delta', sa.Float(precision=53), nullable=True),
    sa.Column('y_delta', sa.Float(precision=53), nullable=True),
    sa.Column('cons', sa.Float(precision=53), nullable=True),
    sa.ForeignKeyConstraint(['commodity_id'], ['commodity.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relation_client_article',
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('client_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['article.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('client_id', 'article_id')
    )
    op.create_table('relation_commodity_article',
    sa.Column('commodity_id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('commodity_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['article.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['commodity_id'], ['commodity.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('commodity_id', 'article_id')
    )
    op.create_table('relation_telegram_article',
    sa.Column('telegram_id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('telegram_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['article.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['telegram_id'], ['telegram_channel.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('telegram_id', 'article_id'),
    comment='Связь новостей с telegram каналами'
    )
    op.create_table('user_telegram_subscription',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('telegram_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['telegram_id'], ['telegram_channel.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['whitelist.user_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'telegram_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_telegram_subscription')
    op.drop_table('relation_telegram_article')
    op.drop_table('relation_commodity_article')
    op.drop_table('relation_client_article')
    op.drop_table('commodity_pricing')
    op.drop_table('commodity_alternative')
    op.drop_table('client_alternative')
    op.drop_table('telegram_channel')
    op.drop_table('quote_source')
    op.drop_table('message')
    op.drop_table('industry_alternative')
    op.drop_table('commodity')
    op.drop_table('client')
    op.drop_table('article_name_impact')
    op.drop_table('whitelist')
    op.drop_table('user_log')
    op.drop_table('research_source')
    op.drop_table('report_met_day')
    op.drop_table('report_industry')
    op.drop_table('report_exc_mon')
    op.drop_table('report_exc_day')
    op.drop_table('report_eco_mon')
    op.drop_table('report_eco_day')
    op.drop_table('report_bon_mon')
    op.drop_table('report_bon_day')
    op.drop_table('quote_group')
    op.drop_table('metals')
    op.drop_table('message_type')
    op.drop_table('key_eco')
    op.drop_table('industry')
    op.drop_table('financial_indicators')
    op.drop_table('exc')
    op.drop_table('eco_stake')
    op.drop_table('eco_rus_influence')
    op.drop_table('eco_global_stake')
    op.drop_table('date_of_last_build')
    op.drop_table('chat')
    op.drop_table('bonds')
    op.drop_table('article')
    # ### end Alembic commands ###
