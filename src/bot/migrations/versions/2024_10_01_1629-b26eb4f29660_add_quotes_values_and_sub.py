"""add_quotes_values_and_sub

Revision ID: b26eb4f29660
Revises: 3121e35c7891
Create Date: 2024-10-01 16:29:06.216600

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b26eb4f29660'
down_revision: Union[str, None] = '3121e35c7891'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'quotes_section',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False, comment='Название'),
        sa.Column('params', sa.JSON(), nullable=True, comment='Параметры для отображения секции'),
        sa.PrimaryKeyConstraint('id'),
        comment='Таблица cо секциями котировок'
    )
    op.create_table(
        'quotes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False, comment='Название'),
        sa.Column('params', sa.JSON(), nullable=True, comment='Параметры для запросов'),
        sa.Column('source', sa.String(), nullable=True, comment='Url для запросов'),
        sa.Column('ticker', sa.String(), nullable=True, comment='Тикер'),
        sa.Column('quotes_section_id', sa.Integer(), nullable=False, comment='Секция котировок'),
        sa.Column('last_update', sa.DateTime(), nullable=True, comment='Время последнего обновления'),
        sa.Column('update_func', sa.String(), nullable=True, comment='Функция для апдейта'),
        sa.ForeignKeyConstraint(['quotes_section_id'], ['quotes_section.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', 'quotes_section_id', name='uq_quote_name_and_section'),
        comment='Таблица cо списком котировок, получаемых через сторонние API'
    )
    op.create_table(
        'quotes_values',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('quote_id', sa.Integer(), nullable=False, comment='Котировка'),
        sa.Column('date', sa.DateTime(), nullable=False, comment='Дата'),
        sa.Column('open', sa.Float(), nullable=True, comment='Цента открытия'),
        sa.Column('close', sa.Float(), nullable=True, comment='Цена закрытия'),
        sa.Column('high', sa.Float(), nullable=True, comment='Максимальная стоимость'),
        sa.Column('low', sa.Float(), nullable=True, comment='Минимальная стоимость'),
        sa.Column('value', sa.Float(), nullable=True, comment='Цента в данный момент'),
        sa.Column('volume', sa.Float(), nullable=True, comment='Объем торгов'),
        sa.ForeignKeyConstraint(['quote_id'], ['quotes.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('quote_id', 'date', name='uq_quote_and_date'),
        comment='Таблица cо списком значений для графиков'
    )
    op.create_table(
        'users_quotes_subscriptions',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.BigInteger(), nullable=False, comment='Пользователь'),
        sa.Column('quote_id', sa.Integer(), nullable=False, comment='Котировка'),
        sa.Column('view_size', sa.Enum('GRAPH_LARGE', 'GRAPH_MEDIUM', 'TEXT', name='sizeenum'), nullable=False,
                  comment='Размер отображения данных: график или текст'),
        sa.ForeignKeyConstraint(['quote_id'], ['quotes.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['registered_user.user_id'], ),
        sa.PrimaryKeyConstraint('id'),
        comment='Таблица подписок пользователей на котировки'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_quotes_subscriptions')
    op.drop_table('quotes_values')
    op.drop_table('quotes')
    op.drop_table('quotes_section')
    # ### end Alembic commands ###
