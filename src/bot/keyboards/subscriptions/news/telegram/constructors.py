"""–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ –ø–æ–¥–ø–∏—Å–∫–∞–º –Ω–∞ –∫–∞–Ω–∞–ª—ã –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ"""
import pandas as pd
from aiogram import types
from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from constants import constants
from constants.subscriptions import const
from db import models
from keyboards.subscriptions import constructors
from keyboards.subscriptions.news.telegram import callbacks as callback_factory


def get_tg_info_kb(callback_data: callback_factory.TelegramSubsMenuData) -> InlineKeyboardMarkup:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤–∏–¥–∞:

    [ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è/–£–¥–∞–ª–∏—Ç—å –∏–∑ –ø–æ–¥–ø–∏—Å–æ–∫ ]
    [   –Ω–∞–∑–∞–¥   ]

    :param callback_data: –°–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –º–µ–Ω—é
    """
    keyboard = InlineKeyboardBuilder()

    add_del_text = '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è' if not callback_data.is_subscribed else '–£–¥–∞–ª–∏—Ç—å –∏–∑ –ø–æ–¥–ø–∏—Å–æ–∫'

    action_call = callback_factory.TelegramSubsMenuData(
        menu=callback_factory.TelegramSubsMenusEnum.telegram_channel_info,
        group_id=callback_data.group_id,
        section_id=callback_data.section_id,
        telegram_id=callback_data.telegram_id,
        is_subscribed=not callback_data.is_subscribed,
        need_add=not callback_data.is_subscribed,
        back_menu=callback_data.back_menu,
    )

    back_call = callback_factory.TelegramSubsMenuData(
        menu=callback_data.back_menu,
        group_id=callback_data.group_id,
        section_id=callback_data.section_id,
        back_menu=callback_data.back_menu,
    )
    keyboard.row(types.InlineKeyboardButton(text=add_del_text, callback_data=action_call.pack()))
    keyboard.row(types.InlineKeyboardButton(
        text=constants.BACK_BUTTON_TXT,
        callback_data=back_call.pack(),
    ))
    return keyboard.as_markup()


def get_groups_kb(groups: list[models.TelegramGroup]) -> InlineKeyboardMarkup:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤–∏–¥–∞

    [ group.name ]
    [ ... ]
    [ group.name ]
    [ Back ]
    [ End ]
    :param groups: –°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø, –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥–∏ —Ç–≥ –∫–∞–Ω–∞–ª–æ–≤
    """
    keyboard = InlineKeyboardBuilder()

    for group in groups:
        callback_data = callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.group_main_menu,
            group_id=group.id,
        )

        keyboard.row(types.InlineKeyboardButton(
            text=group.name,
            callback_data=callback_data.pack(),
        ))

    keyboard.row(types.InlineKeyboardButton(
        text=constants.BACK_BUTTON_TXT,
        callback_data=const.SUBS_MENU,
    ))
    keyboard.row(types.InlineKeyboardButton(
        text=constants.END_BUTTON_TXT,
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.end_menu,
        ).pack(),
    ))
    return keyboard.as_markup()


def get_group_main_menu_kb(group_id: int) -> InlineKeyboardMarkup:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤–∏–¥–∞:

    [ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ ]
    [ –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏    ]
    [ –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ ]
    [ –ù–∞–∑–∞–¥ ]
    [ –ó–∞–≤–µ—Ä—à–∏—Ç—å ]
    :param group_id: bot_telegram_group.id
    """
    keyboard = InlineKeyboardBuilder()
    keyboard.row(types.InlineKeyboardButton(
        text='–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏',
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.my_subscriptions,
            group_id=group_id,
        ).pack(),
    ))
    keyboard.row(types.InlineKeyboardButton(
        text='–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏',
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.change_subscriptions,
            group_id=group_id,
        ).pack(),
    ))
    keyboard.row(types.InlineKeyboardButton(
        text='–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏',
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.approve_delete_menu,
            group_id=group_id,
        ).pack(),
    ))
    keyboard.row(types.InlineKeyboardButton(
        text=constants.BACK_BUTTON_TXT,
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.main_menu,
        ).pack(),
    ))
    keyboard.row(types.InlineKeyboardButton(
        text=constants.END_BUTTON_TXT,
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.end_menu,
        ).pack(),
    ))
    return keyboard.as_markup()


def get_my_subscriptions_kb(page_data: pd.DataFrame, page: int, max_pages: int, group_id: int) -> InlineKeyboardMarkup:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤–∏–¥–∞:

    [ telegram channel name ][‚ùå]
    [ telegram channel name ][‚ùå]
    [ telegram channel name ][‚ùå]
    [ <- ][     –Ω–∞–∑–∞–¥     ][ -> ]

    :param page_data: –î–∞–Ω–Ω—ã–µ –æ —Ç–≥ –ø–æ–¥–ø–∏—Å–∫–∞—Ö –Ω–∞ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ [id, name]
    :param page: –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ù—É–∂–µ–Ω –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback_data
    :param max_pages: –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    :param group_id: bot_telegram_group.id
    """
    keyboard = InlineKeyboardBuilder()

    for _, item in page_data.iterrows():
        more_info_call = callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.telegram_channel_info,
            group_id=group_id,
            page=page,
            telegram_id=item['id'],
            is_subscribed=True,
            back_menu=callback_factory.TelegramSubsMenusEnum.my_subscriptions,
        )
        delete_call = callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.my_subscriptions,
            group_id=group_id,
            page=page,
            telegram_id=item['id'],
            is_subscribed=True,
        )
        keyboard.row(types.InlineKeyboardButton(text=item['name'], callback_data=more_info_call.pack()))
        keyboard.add(types.InlineKeyboardButton(text=constants.DELETE_CROSS, callback_data=delete_call.pack()))

    if page != 0:
        keyboard.row(types.InlineKeyboardButton(
            text=constants.PREV_PAGE,
            callback_data=callback_factory.TelegramSubsMenuData(
                menu=callback_factory.TelegramSubsMenusEnum.my_subscriptions,
                group_id=group_id,
                page=page - 1,
            ).pack(),
        ))
    else:
        keyboard.row(types.InlineKeyboardButton(text=constants.STOP, callback_data='constants.STOP'))

    keyboard.add(types.InlineKeyboardButton(
        text=constants.BACK_BUTTON_TXT,
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.group_main_menu,
            group_id=group_id,
        ).pack(),
    ))

    if page < max_pages - 1:
        keyboard.add(types.InlineKeyboardButton(
            text=constants.NEXT_PAGE,
            callback_data=callback_factory.TelegramSubsMenuData(
                menu=callback_factory.TelegramSubsMenusEnum.my_subscriptions,
                group_id=group_id,
                page=page + 1,
            ).pack(),
        ))
    else:
        keyboard.add(types.InlineKeyboardButton(text=constants.STOP, callback_data='constants.STOP'))

    keyboard.row(types.InlineKeyboardButton(
        text=constants.END_BUTTON_TXT,
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.end_menu,
        ).pack(),
    ))
    return keyboard.as_markup()


def get_sections_menu_kb(
        telegram_sections: list[models.TelegramSection],
        group_id: int,
) -> InlineKeyboardMarkup:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤–∏–¥–∞:

    [ section.name ]
    [ ... ]
    [ section.name ]
    [ –ù–∞–∑–∞–¥ ]
    [ –ó–∞–≤–µ—Ä—à–∏—Ç—å ]
    :param telegram_sections: —Å–ø–∏—Å–æ–∫ —Ä–∞–∑–¥–µ–ª–æ–≤ –≤ –≥—Ä—É–ø–ø–µ (bot_telegram_section)
    :param group_id: bot_telegram_group.id
    """
    keyboard = InlineKeyboardBuilder()

    for section in telegram_sections:
        keyboard.row(types.InlineKeyboardButton(
            text=section.name,
            callback_data=callback_factory.TelegramSubsMenuData(
                menu=callback_factory.TelegramSubsMenusEnum.telegram_channels_by_section,
                group_id=group_id,
                section_id=section.id,
                back_menu=callback_factory.TelegramSubsMenusEnum.change_subscriptions,
            ).pack(),
        ))

    keyboard.row(types.InlineKeyboardButton(
        text=constants.BACK_BUTTON_TXT,
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.group_main_menu,
            group_id=group_id,
        ).pack(),
    ))
    keyboard.row(types.InlineKeyboardButton(
        text=constants.END_BUTTON_TXT,
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.end_menu,
        ).pack(),
    ))
    return keyboard.as_markup()


def get_change_subscriptions_kb(
        telegram_channels: pd.DataFrame,
        callback_data: callback_factory.TelegramSubsMenuData,
) -> InlineKeyboardMarkup:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤–∏–¥–∞:

    [‚úÖ/üü©][ telegram_channel['name'] ]
    [‚úÖ/üü©][ ... ]
    [‚úÖ/üü©][ telegram_channel['name'] ]
    [ –ù–∞–∑–∞–¥ ]
    [ –ó–∞–≤–µ—Ä—à–∏—Ç—å ]
    :param telegram_channels: –°–ø–∏—Å–æ–∫ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è (telegram_channel)
                              DataFrame[id, name, is_subscribed]
    :param callback_data: –î–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–º –º–µ–Ω—é
    """
    keyboard = InlineKeyboardBuilder()

    for _, item in telegram_channels.iterrows():
        add_del_call = callback_factory.TelegramSubsMenuData(
            menu=callback_data.menu,
            group_id=callback_data.group_id,
            section_id=callback_data.section_id,
            telegram_id=item['id'],
            is_subscribed=item['is_subscribed'],
            back_menu=callback_data.back_menu,
        )
        more_info_call = callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.telegram_channel_info,
            group_id=callback_data.group_id,
            section_id=callback_data.section_id,
            telegram_id=item['id'],
            is_subscribed=item['is_subscribed'],
            back_menu=callback_data.menu,
        )

        mark = constants.SELECTED if item['is_subscribed'] else constants.UNSELECTED
        keyboard.row(types.InlineKeyboardButton(text=mark, callback_data=add_del_call.pack()))
        keyboard.add(types.InlineKeyboardButton(text=item['name'], callback_data=more_info_call.pack()))

    keyboard.row(types.InlineKeyboardButton(
        text=constants.BACK_BUTTON_TXT,
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_data.back_menu,
            group_id=callback_data.group_id,
            section_id=callback_data.section_id,
            back_menu=callback_data.back_menu,
        ).pack(),
    ))
    keyboard.row(types.InlineKeyboardButton(
        text=constants.END_BUTTON_TXT,
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.end_menu,
        ).pack(),
    ))
    return keyboard.as_markup()


def get_prepare_tg_subs_delete_all_kb(group_id: int) -> InlineKeyboardMarkup:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤–∏–¥–∞:

    [ –î–∞ ][ –ù–µ—Ç ]
    [   –Ω–∞–∑–∞–¥   ]
    :param group_id: bot_telegram_group.id
    """
    delete_subs_callback_data = callback_factory.TelegramSubsMenuData(
        menu=callback_factory.TelegramSubsMenusEnum.delete_subscriptions_by_group,
        group_id=group_id,
    ).pack()
    back_callback_data = callback_factory.TelegramSubsMenuData(
        menu=callback_factory.TelegramSubsMenusEnum.group_main_menu,
        group_id=group_id,
    ).pack()
    return constructors.get_approve_action_kb(
        delete_subs_callback_data,
        back_callback_data,
        back_callback_data,
    )


def get_back_to_tg_subs_menu_kb(group_id: int) -> InlineKeyboardMarkup:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤–∏–¥–∞:

    [   –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é   ]
    :param group_id: bot_telegram_group.id
    """
    keyboard = InlineKeyboardBuilder()
    keyboard.row(types.InlineKeyboardButton(
        text=constants.BACK_BUTTON_TXT,
        callback_data=callback_factory.TelegramSubsMenuData(
            menu=callback_factory.TelegramSubsMenusEnum.group_main_menu,
            group_id=group_id,
        ).pack(),
    ))
    return keyboard.as_markup()
